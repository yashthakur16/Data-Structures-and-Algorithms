bool possiblesolution(vector<int> &boards,int n, int k, int mid)
{
    int paintercount=1;
    int timecount=0;
    
    for(int i=0;i<n;i++)
    {
        if(timecount+board[i]<=mid)
        {
            timecount+=board[i];
        }
        else
        {
            paintercount++;
            if(paintercount>k||board[i]>mid)
            {
                return false;
            }
            timecount=board[i];

        }

    }
    return true;
}





int findLargestMinDistance(vector<int> &boards, int k)
{
    int s=0;
    int e=0;
    int sum=0;
    int n=boards,size()
    for (int i=0;i<n;i++)
    {
        sum+=boards[i];
    }
    e=sum;
    int ans=-1;
    int mid=s+((e-s)/2);

    while(s<=e)
    {
        if(possiblesolution(boards,n,k,mid))
        {
            ans=mid;
            e=mid-1;
        }
        else
        {
            s=mid+1;
        }
        mid=s+((e-s)/2);
    }
}
