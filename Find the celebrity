//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution 
{
    public://Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        stack<int> st;
        for(int i=0;i<n;i++)
        {
            st.push(i);
        }
        
        int a;
        int b;
        
        while(st.size()>1)
        {
            a=st.top();
            st.pop();
            b=st.top();
            st.pop();
            
            if(M[a][b]==1)
            {
                st.push(b);
            }
            else
            {
                st.push(a);
            }
        }
        int candidate=st.top();
        bool row=true;
        bool col=false;
        for(int i=0;i<n;i++)
        {
            if(M[candidate][i]==1)
            {
                row=false;
            }
        }
        int onecount=0;
        
        for(int i=0;i<n;i++)
        {
            if(M[i][candidate]==1)
            {
                onecount++;
            }
        }
        if(onecount==n-1)
        {
            col=true;
        }
        if(col ==true and row==true)
        {
            return candidate;
        }
        else
        {
            return -1;
        }
        
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}

// } Driver Code Ends
