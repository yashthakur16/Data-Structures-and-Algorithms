#include<iostream>
using namespace std;

class Queue
{
    public:
    int n;
    int k;
    int *arr;
    int *next;
    int *front;
    int *rear;
    int freespot=0;
    int index;

    Queue(int n,int k)
    {
        this->k=k;
        this->n=n;
        arr=new int[n];
        next=new int[n];

        for(int i=0;i<n;i++)
        {
            next[i]=i+1;
        }
        next[n-1]=-1;
        rear=new int[k];
        front=new int[k];

        for(int i=0;i<k;i++)
        {
            front[i]=rear[i]=-1;
        }
    }

    void push(int element,int q)
    {
        if(freespot==-1)
        {
            cout<<"Overflowed";
            return ;
        }
        index=freespot;
        freespot=next[index];

        if(front[q-1]==-1)
        {
            front[q-1]=index;
        }
        else
        {
            next[rear[q-1]]=index;
        }
        next[index]=-1;
        arr[index]=element;
        rear[q-1]=index;

    }

    int pop(int q)
    {
        if(front[q-1]==-1)
        {
            cout<<"Underflow";
            return -1;
        }
        int index=front[q-1];
        front[q-1]=next[index];
        next[index]=freespot;
        freespot=index;
        return arr[index];
    }

};

int main()
{
    Queue q(10,3);
    q.push(5,3);
    q.push(4,3);
    q.push(2,3);
    q.push(1,3);
    q.push(9,3);

    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
    cout<<q.pop(3);
    cout<<endl;
}
