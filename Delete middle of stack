#include <bits/stdc++.h> 
void deleteMiddle(stack<int>&inputStack, int N)
{
   int middle=N/2;
   int *arr=new int[middle+1];
   int i=0;

   while(middle !=0)
   {
      arr[i++]=inputStack.top();
      inputStack.pop();
      middle--;
   }
   inputStack.pop();
   i--;

   while(i>=0)
   {
      inputStack.push(arr[i--]);
   }

   return ;

}

//Using recusrsion

#include <bits/stdc++.h> 

void solve(stack<int>&inputStack, int N,int count)
{
   if(count==N/2)
   {
      inputStack.pop();
      return;
   }

   int num=inputStack.top();
   inputStack.pop();
   
   solve(inputStack,N,count+1);
   inputStack.push(num);
}
void deleteMiddle(stack<int>&inputStack, int N)
{
   

   solve(inputStack,N,0);

}
